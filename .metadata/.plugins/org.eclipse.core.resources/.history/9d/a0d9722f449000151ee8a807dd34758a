import com.modeliosoft.modelio.javadesigner.annotations.objid;

@objid ("a4710fcb-ad49-4373-b797-03a5e25d0e11")
public abstract class Motorisation extends Voiture {
    
    public float masse;

    @objid ("73b7c3b3-3778-44ad-9ad2-a7d5c6c6cc72")
    public float force;

    @objid ("edd36889-6cd3-4fd1-9010-2a869c3d9140")
    public Voiture voiture;

    @objid ("09c7efe5-01dd-4cf7-8184-68a3ebc86154")
    public Voiture getVoiture() {
    }

    @objid ("a020ef71-5eb3-42bd-be74-3299560c66bc")
    public float acceleration() {
    }

    @objid ("e48d0cfc-13af-471c-bee4-39aee2f48af0")
    public float distanceParcourue(int t) {
    }

}

public abstract class Motorisation extends Voiture
{
	@objid ("f567c083-cdb6-4c26-b749-394a95b14181")
	private float masse ;
	
	@objid ("73b7c3b3-3778-44ad-9ad2-a7d5c6c6cc72")
	private float force ;
	
	private Voiture v ;						// la Voiture a decorer avec la motorisation
	
	
	/**
	 * Initialise la Motorisation avec
	 */
	
	public Motorisation(Voiture uneVoiture, float uneMasseMoteur, float uneForceMoteur
	{
		super() ;
		this.masseMoteur = uneMasseMoteur ;
		this.forceMoteur = uneForceMoteur ;
		this.v = uneVoiture ;
	}
	
	/**
	 * 	Redefinition de prix pour obliger les classes filles a donner
	 * les instructions adequates
	 */
	public abstract int prix() ;
	
	
	/**
	 *
	 */
	public float getMasseMoteur()
	{
		return this.masseMoteur ;
	}
	
	
	/**
	 *
	 */
	public float getForceMoteur()
	{
		return this.forceMoteur ;
	}
	/**
	* 	
	*/
	public float getMasse()
	{
		return this.getMasseMoteur() + this.getVoiture().getMasse() ;
	}
	
	
	
	/**
	 * retourne la Voiture qui est decoree
	 */
	public Voiture getVoiture()
	{
		return v ;
	}
	
	/**
	 *
	 */
	public float acceleration()
	{
		return this.getForceMoteur() / (this.getVoiture().getMasse() + this.
getMasseMoteur()) ;
	}
	
	
	/**
	 * distance parcourue au temps t
	 */
	public float distanceParcourue(float t)
	{
		return 0.5f * this.acceleration() * t * t ;
	}
	
	
	/**
		retourne le modele de la voiture de base ("interne")
	*/
	public String getModele()
	{
		return this.getVoiture().getModele() ;
	}
	
	
	
	/**
	 * retourne la description de la motorisation
	 */
	public String toString()
	{
		return " moteur : poids = " + this.getMasseMoteur() + "t, force = " + this.getForceMoteur() + "N" ;
	}
	
}	